version: '3'

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: docker-course-frontend
    command: serve -s build -l 3000
    restart: unless-stopped
    networks:
      - docker-course-network

  api:
    build: ./api
    command: npm run start:prod
    container_name: docker-course-api
    restart: unless-stopped
    environment:
      - PORT=5000
      - HOST=http://docker-course.com
      - DB=mongodb://api_db:27017/api
      - AUTH_API_URL=http://auth:5001/api
    depends_on:
      - api_db
    networks:
      - docker-course-network


  api_db:
    image: mongo:latest
    container_name: docker-course-api-db
    volumes:
      - mongodb_api:/data/db
    networks:
      - docker-course-network


  auth: 
    build: ./auth
    command: npm run start:prod
    container_name: docker-course-auth
    restart: unless-stopped
    environment:
      - PORT=5001
      - HOST=http://docker-course.com
      - DB=mongodb://auth_db:27017/auth    
      - API_URL=http://api:5000/api
    depends_on: 
      - auth_db
    networks:
      - docker-course-network

  auth_db:
    image: mongo:latest
    container_name: docker-course-auth-db
    volumes:
      - mongodb_auth:/data/db
    networks:
      - docker-course-network

  nginx: 
    image: nginx:stable-alpine
    container_name: docker-course-nginx
    ports:
      - "80:80"
    volumes: 
      - ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - api
      - auth
    networks:
      - docker-course-network

volumes:
  mongodb_api:
  mongodb_auth:

networks: 
  docker-course-network:
    driver: bridge

